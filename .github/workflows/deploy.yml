name: Deploy to Production

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check required secrets
        run: |
          if [ -z "${{ secrets.SSH_HOST }}" ]; then echo "❌ Missing secret: SSH_HOST"; exit 1; fi
          if [ -z "${{ secrets.SSH_USER }}" ]; then echo "❌ Missing secret: SSH_USER"; exit 1; fi
          if [ -z "${{ secrets.SSH_KEY }}" ]; then echo "❌ Missing secret: SSH_KEY"; exit 1; fi
          if [ -z "${{ secrets.SSH_PORT }}" ]; then echo "❌ Missing secret: SSH_PORT"; exit 1; fi
          if [ -z "${{ secrets.REMOTE_PATH }}" ]; then echo "❌ Missing secret: REMOTE_PATH"; exit 1; fi
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci --include=optional

      - name: Install sharp for Linux
        run: npm install --platform=linux --arch=x64 sharp

      - name: Build Next.js app
        run: npm run build
        env:
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_SSL: ${{ secrets.DB_SSL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          NEXT_PUBLIC_GTM_ID: ${{ secrets.NEXT_PUBLIC_GTM_ID }}
          NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
          EMAIL_SMTP_HOST: ${{ secrets.EMAIL_SMTP_HOST }}
          EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT }}
          EMAIL_SMTP_USER: ${{ secrets.EMAIL_SMTP_USER }}
          EMAIL_SMTP_PASSWORD: ${{ secrets.EMAIL_SMTP_PASSWORD }}
          EMAIL_FROM_NAME: ${{ secrets.EMAIL_FROM_NAME }}
          EMAIL_FROM_ADDRESS: ${{ secrets.EMAIL_FROM_ADDRESS }}
          COMPANY_NAME: ${{ secrets.COMPANY_NAME }}
          COMPANY_ADDRESS: ${{ secrets.COMPANY_ADDRESS }}
          COMPANY_VAT_ID: ${{ secrets.COMPANY_VAT_ID }}
          COMPANY_PHONE: ${{ secrets.COMPANY_PHONE }}
          COMPANY_EMAIL: ${{ secrets.COMPANY_EMAIL }}


      - name: Archive files
        run: |
          tar -czf deploy.tar.gz \
            .next \
            public \
            package.json \
            package-lock.json \
            next.config.mjs \
            ecosystem.config.js

      - name: Copy deploy.tar.gz to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "deploy.tar.gz"
          target: "${{ secrets.REMOTE_PATH }}"

      - name: Remote deploy & restart app
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.REMOTE_PATH }}
            rm -rf .next
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            npm install --omit=dev
            pm2 restart ecosystem.config.js --update-env
            pm2 save
